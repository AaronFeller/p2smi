<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>p2smi: A toolkit enabling SMILES generation and property
analysis for noncanonical and cyclized peptides</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4476-1026</contrib-id>
<name>
<surname>Feller</surname>
<given-names>Aaron L.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7470-9261</contrib-id>
<name>
<surname>Wilke</surname>
<given-names>Claus O.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Interdisciplinary Life Sciences, The
University of Texas at Austin, Austin, TX, United States</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Integrative Biology, The University of Texas
at Austin, Austin, TX, United States</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-03-21">
<day>21</day>
<month>3</month>
<year>2025</year>
</pub-date>
<volume>¿VOL?</volume>
<issue>¿ISSUE?</issue>
<fpage>¿PAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>1970</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>cheminformatics</kwd>
<kwd>bioinformatics</kwd>
<kwd>peptides</kwd>
<kwd>SMILES</kwd>
<kwd>molecular properties</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Converting peptide sequences into useful representations for
  downstream analysis is a common step in computational modeling and
  cheminformatics. Furthermore, peptide drugs (e.g. Semaglutide,
  Degarelix) include chemistries beyond natural amino acids and standard
  backbone structure. Common modifications used include noncanonical
  amino acids, alternate stereochemistry (D- vs L- amino acids),
  modified chemistrie such as N-methylation and PEGylation. Here we
  present p2smi, a Python toolkit with CLI, designed to facilitate the
  generation of drug-like peptides and their conversion into chemical
  SMILES strings. By supporting peptide cyclizations, unnatural amino
  acid incorporation, and chemical modifications, p2smi enables
  generation of accurate SMILES strings for drug-like peptides,
  providing a missing link for computational modeling and
  cheminformatics analyses. The toolkit offers functionalities for
  chemical modification of peptides and for calculation of molecular
  properties such as hydrophobicity, topological polar surface area,
  molecular weight, and adherence to Lipinski’s rules for
  drug-likeness.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>The development of p2smi was driven by the need to generate
  large-scale datasets of drug-like peptide SMILES strings for
  pretraining transformer-based models to predict membrane permeation
  from chemical structure
  (<xref alt="Feller &amp; Wilke, 2025" rid="ref-feller2025peptide" ref-type="bibr">Feller
  &amp; Wilke, 2025</xref>). Built on the core concepts from the CycloPs
  (<xref alt="Duffy et al., 2011" rid="ref-duffy2011cyclops" ref-type="bibr">Duffy
  et al., 2011</xref>) method for FASTA-to-SMILES conversion, p2smi has
  evolved into a stand-alone resource to support peptide-focused machine
  learning pipelines and peptide design workflows. While several
  bioinformatics toolkits exist for chemical representation and
  cheminformatics workflows
  (<xref alt="ChemAxon, 2025" rid="ref-ChemAxon" ref-type="bibr"><italic>ChemAxon</italic>,
  2025</xref>;
  <xref alt="Cock et al., 2009" rid="ref-cock2009biopython" ref-type="bibr">Cock
  et al., 2009</xref>;
  <xref alt="Landrum, 2025" rid="ref-landrum2013rdkit" ref-type="bibr">Landrum,
  2025</xref>;
  <xref alt="O’Boyle et al., 2011" rid="ref-o2011open" ref-type="bibr">O’Boyle
  et al., 2011</xref>;
  <xref alt="OpenEye, 2025" rid="ref-OEChem" ref-type="bibr">OpenEye,
  2025</xref>);, many face limitations such as proprietary licensing and
  lack in ability to interpret or encode noncanonical amino acids
  (NCAAs). These constraints limit high-throughput application of
  sequence generation and conversion, especially for drug-like peptides
  containing diverse stereochemistries. In, addition, there are several
  python tools that focus on structure generation and cyclization
  (<xref alt="Tien et al., 2013" rid="ref-tien2013peptidebuilder" ref-type="bibr">Tien
  et al., 2013</xref>;
  <xref alt="Yang et al., 2025" rid="ref-yang2025cyclicpeptide" ref-type="bibr">Yang
  et al., 2025</xref>), however, these are not able to incorporate all
  necessary modifications. We used p2smi to build a dataset of 10M
  peptides with NCAAs, backbone modifications, and cyclizations for
  pretraining a chemical language model
  (<xref alt="Feller &amp; Wilke, 2025" rid="ref-feller2025peptide" ref-type="bibr">Feller
  &amp; Wilke, 2025</xref>). To support the community, have made p2smi
  available as an open source package on PyPI, offering both
  command-line tools and Python functions for seamless integration into
  larger workflows.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>p2smi offers five core command-line tools to support peptide
  sequence generation, conversion, modification, and analysis:</p>
  <list list-type="bullet">
    <list-item>
      <p><bold>generate-peptides:</bold>
      Generates random peptide sequences with customizable parameters;
      number of peptides, minimum and maximum length, percentage of
      unnatural amino acids, rate of D-stereochemistry, and cyclization
      types (randomly chosen). Currently accommodates over 100 unnatural
      amino acid residues described in SwissSidechain
      (<xref alt="Gfeller et al., 2012" rid="ref-gfeller2012swisssidechain" ref-type="bibr">Gfeller
      et al., 2012</xref>).
      <bold>Input:</bold> Settings and output filename.
      <bold>Output:</bold> FASTA file with expanded single character
      notation.</p>
    </list-item>
    <list-item>
      <p><bold>fasta2smi:</bold>
      Converts peptide sequences from FASTA format (with the expanded
      set of NCAAs) into SMILES notation. Conducts cyclization reactions
      from notation in the FASTA header, supporting five types of
      cyclization reactions; disulfide bonded, head-to-tail,
      sidechain-to-sidechain, sidechain-to-head, and sidechain-to-tail.
      <bold>Input:</bold> Protein FASTA file. Optional FASTA header
      notation for cyclization reaction.
      <bold>Output:</bold> File in novel .p2smi format that includes the
      single character amino acid representation, type of cyclization
      reaction, and the resulting SMILES string.</p>
    </list-item>
    <list-item>
      <p><bold>modify-smiles:</bold>
      Applies N-methylation and PEGylation to existing SMILES strings.
      Rates of modification are defined by CLI arguments with peptides
      and sites randomly selected. Changes are recorded when input is in
      the .p2smi format.
      <bold>Input:</bold> Text file with single SMILES per line or
      .p2smi file.
      <bold>Output:</bold> Single SMILES per line or .p2smi format (if
      input is .p2smi).</p>
    </list-item>
    <list-item>
      <p><bold>smiles-props:</bold>
      Computes molecular properties from SMILES strings including:
      molecular weight, TPSA, MolLogP, hydrogen donor/acceptor count,
      rotatable bond count, ring count, fraction Csp3, heavy atom count,
      formal charge, molecular formula, and compliance with Lipinski’s
      rules.
      <bold>Input:</bold> Text file with single SMILES per line or
      .p2smi format.
      <bold>Output:</bold> Text file with JSON formatted dictionary of
      properties.</p>
    </list-item>
    <list-item>
      <p><bold>synthesis-check:</bold>
      Synthetic feasibility of natural peptides including several
      forbidden motifs (N/Q at N-terminus, proline/glycine runs, DG/DP
      motifs, cysteine count, terminal P/C), a maximum length
      restriction, hydrophobicity check, and minimum charge
      distribution.
      <bold>Input:</bold> Protein FASTA file.
      <bold>Output:</bold> Protein FASTA file with modified header
      (PASS/FAIL).</p>
    </list-item>
  </list>
  <p>For detailed usage instructions and options for each command, users
  can append the –help flag to any command (e.g., generate-peptides
  –help). This will provide guidance on the command’s functionality and
  available parameters.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>In the realm of peptide informatics, several tools have been
  recently developed to facilitate the analysis and representation of
  peptides, particularly those incorporating NCAAs and complex
  modifications including cyclization. Notably, pyPept
  (<xref alt="Ochoa et al., 2023" rid="ref-ochoa2023pypept" ref-type="bibr">Ochoa
  et al., 2023</xref>), PepFuNN
  (<xref alt="Ochoa &amp; Deibler, 2025" rid="ref-ochoa2025pepfunn" ref-type="bibr">Ochoa
  &amp; Deibler, 2025</xref>), and cyclicpeptide
  (<xref alt="Yang et al., 2025" rid="ref-yang2025cyclicpeptide" ref-type="bibr">Yang
  et al., 2025</xref>) have emerged as significant contributions in this
  area.</p>
  <p>pyPept is a Python library that generates 2D and 3D representations
  of peptides. It converts sequences from formats like FASTA, HELM, or
  BILN into molecular graphs, enabling visualization and physicochemical
  property calculations. Notably, pyPept allows customization of monomer
  libraries to accommodate a wide range of peptide modifications. It
  also offers modules for rapid peptide conformer generation,
  incorporating user-defined or predicted secondary structure
  restraints, which is valuable for structural analyses.</p>
  <p>PepFuNN is an open-source Python package designed to explore the
  chemical space of peptide libraries and conduct structure–activity
  relationship analyses. It includes modules for calculating
  physicochemical properties, assessing similarity using various peptide
  representations, clustering peptides based on molecular fingerprints
  or descriptors, and designing peptide libraries tailored to specific
  requirements. Additionally, PepFuNN provides tools for extracting
  matched pairs from experimental data, aiding in the identification of
  key mutations for subsequent design iterations.</p>
  <p>The cyclicpeptide package provides a unified framework for
  converting between cyclic peptide sequences and structures, aligning
  cyclic peptides via graph methods, and analyzing their properties to
  support drug design. It supports multiple cyclization types and
  monomer libraries, validates its conversions on large cyclic peptide
  datasets with high accuracy and stability, and enables efficient
  cyclic peptide generation. By integrating these modular tools, it
  fills a gap in peptide informatics by facilitating standardized
  representations and transformations specifically for cyclic peptides,
  complementing existing tools focused more on linear peptides or
  structural analyses.</p>
  <p>While these tools offer valuable capabilities, they are not
  specifically designed for the direct conversion of drug-like peptides
  into SMILES strings, a functionality central to the initial use-case
  for p2smi of generating a large-scale database. Rather, these recent
  additions in the field focus on structural representation, analysis,
  and structure–activity relationship studies of peptides, complementing
  the sequence-to-SMILES conversion capabilities provided by p2smi.</p>
</sec>
<sec id="code-availability">
  <title>Code availability</title>
  <p>We have provided p2smi as a pip-installable package, available on
  PyPI at https://pypi.org/project/p2smi. The source code, including
  documentation and example notebooks, is openly available on GitHub at
  https://github.com/aaronfeller/p2smi.</p>
</sec>
<sec id="data-availability">
  <title>Data availability</title>
  <p>The dataset of 10M cyclic peptides with noncanonical amino acids
  and chemical modifications, generated using p2smi, can be found at
  https://zenodo.org/records/15042141.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work was supported by NIH grant 1R01 AI148419. C.O.W. was also
  supported by the Blumberg Centennial Professorship in Molecular
  Evolution at The University of Texas at Austin.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-feller2025peptide">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Feller</surname><given-names>Aaron L</given-names></name>
        <name><surname>Wilke</surname><given-names>Claus O</given-names></name>
      </person-group>
      <article-title>Peptide-aware chemical language model successfully predicts membrane diffusion of cyclic peptides</article-title>
      <source>Journal of Chemical Information and Modeling</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>65</volume>
      <issue>2</issue>
      <fpage>571</fpage>
      <lpage>579</lpage>
    </element-citation>
  </ref>
  <ref id="ref-duffy2011cyclops">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Duffy</surname><given-names>Fergal J</given-names></name>
        <name><surname>Verniere</surname><given-names>Mélanie</given-names></name>
        <name><surname>Devocelle</surname><given-names>Marc</given-names></name>
        <name><surname>Bernard</surname><given-names>Elise</given-names></name>
        <name><surname>Shields</surname><given-names>Denis C</given-names></name>
        <name><surname>Chubb</surname><given-names>Anthony J</given-names></name>
      </person-group>
      <article-title>CycloPs: Generating virtual libraries of cyclized and constrained peptides including nonnatural amino acids</article-title>
      <source>Journal of chemical information and modeling</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>51</volume>
      <issue>4</issue>
      <fpage>829</fpage>
      <lpage>836</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gfeller2012swisssidechain">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gfeller</surname><given-names>David</given-names></name>
        <name><surname>Michielin</surname><given-names>Olivier</given-names></name>
        <name><surname>Zoete</surname><given-names>Vincent</given-names></name>
      </person-group>
      <article-title>SwissSidechain: A molecular and structural database of non-natural sidechains</article-title>
      <source>Nucleic acids research</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>41</volume>
      <issue>D1</issue>
      <fpage>D327</fpage>
      <lpage>D332</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ChemAxon">
    <element-citation>
      <article-title>ChemAxon</article-title>
      <publisher-name>https://www.chemaxon.com</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-o2011open">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>O’Boyle</surname><given-names>Noel M</given-names></name>
        <name><surname>Banck</surname><given-names>Michael</given-names></name>
        <name><surname>James</surname><given-names>Craig A</given-names></name>
        <name><surname>Morley</surname><given-names>Chris</given-names></name>
        <name><surname>Vandermeersch</surname><given-names>Tim</given-names></name>
        <name><surname>Hutchison</surname><given-names>Geoffrey R</given-names></name>
      </person-group>
      <article-title>Open babel: An open chemical toolbox</article-title>
      <source>Journal of cheminformatics</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>3</volume>
      <fpage>1</fpage>
      <lpage>14</lpage>
    </element-citation>
  </ref>
  <ref id="ref-landrum2013rdkit">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Landrum</surname><given-names>Greg</given-names></name>
      </person-group>
      <article-title>RDKit: A software suite for cheminformatics, computational chemistry, and predictive modeling</article-title>
      <publisher-name>https://www.rdkit.org</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-OEChem">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>OpenEye</surname><given-names>Cadence Molecular Sciences</given-names></name>
      </person-group>
      <article-title>OEChem</article-title>
      <publisher-name>https://www.eyesopen.com</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-ochoa2023pypept">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ochoa</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Brown</surname><given-names>JB</given-names></name>
        <name><surname>Fox</surname><given-names>Thomas</given-names></name>
      </person-group>
      <article-title>pyPept: A python library to generate atomistic 2D and 3D representations of peptides</article-title>
      <source>Journal of Cheminformatics</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>15</volume>
      <issue>1</issue>
      <fpage>79</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ochoa2025pepfunn">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ochoa</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Deibler</surname><given-names>Kristine</given-names></name>
      </person-group>
      <article-title>PepFuNN: Novo nordisk open-source toolkit to enable peptide in silico analysis</article-title>
      <source>Journal of Peptide Science</source>
      <publisher-name>Wiley Online Library</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>31</volume>
      <issue>2</issue>
      <fpage>e3666</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-cock2009biopython">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cock</surname><given-names>Peter JA</given-names></name>
        <name><surname>Antao</surname><given-names>Tiago</given-names></name>
        <name><surname>Chang</surname><given-names>Jeffrey T</given-names></name>
        <name><surname>Chapman</surname><given-names>Brad A</given-names></name>
        <name><surname>Cox</surname><given-names>Cymon J</given-names></name>
        <name><surname>Dalke</surname><given-names>Andrew</given-names></name>
        <name><surname>Friedberg</surname><given-names>Iddo</given-names></name>
        <name><surname>Hamelryck</surname><given-names>Thomas</given-names></name>
        <name><surname>Kauff</surname><given-names>Frank</given-names></name>
        <name><surname>Wilczynski</surname><given-names>Bartek</given-names></name>
        <name><surname>Hoon</surname><given-names>MJL de</given-names></name>
      </person-group>
      <article-title>Biopython: Freely available python tools for computational molecular biology and bioinformatics</article-title>
      <source>Bioinformatics</source>
      <year iso-8601-date="2009">2009</year>
      <volume>25</volume>
      <issue>11</issue>
      <fpage>1422</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-tien2013peptidebuilder">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Tien</surname><given-names>Matthew Z</given-names></name>
        <name><surname>Sydykova</surname><given-names>Dariya K</given-names></name>
        <name><surname>Meyer</surname><given-names>Austin G</given-names></name>
        <name><surname>Wilke</surname><given-names>Claus O</given-names></name>
      </person-group>
      <article-title>PeptideBuilder: A simple python library to generate model peptides</article-title>
      <source>PeerJ</source>
      <publisher-name>PeerJ Inc.</publisher-name>
      <year iso-8601-date="2013">2013</year>
      <volume>1</volume>
      <fpage>e80</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-yang2025cyclicpeptide">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Yang</surname><given-names>Liu</given-names></name>
        <name><surname>Cao</surname><given-names>Suqi</given-names></name>
        <name><surname>Liu</surname><given-names>Lei</given-names></name>
        <name><surname>Zhu</surname><given-names>Ruixin</given-names></name>
        <name><surname>Wu</surname><given-names>Dingfeng</given-names></name>
      </person-group>
      <article-title>Cyclicpeptide: A python package for cyclic peptide drug design</article-title>
      <source>Briefings in Bioinformatics</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>26</volume>
      <issue>1</issue>
      <fpage>bbae714</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>

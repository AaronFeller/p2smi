<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN"
                  "JATS-publishing1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
<journal-title>Journal of Open Source Software</journal-title>
<abbrev-journal-title>JOSS</abbrev-journal-title>
</journal-title-group>
<issn publication-format="electronic">2475-9066</issn>
<publisher>
<publisher-name>Open Journals</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="publisher-id">0</article-id>
<article-id pub-id-type="doi">N/A</article-id>
<title-group>
<article-title>p2smi: A Python Toolkit for Peptide FASTA-to-SMILES
Conversion and Molecular Property Analysis</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-4476-1026</contrib-id>
<name>
<surname>Feller</surname>
<given-names>Aaron L.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="corresp" rid="cor-1"><sup>*</sup></xref>
</contrib>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-7470-9261</contrib-id>
<name>
<surname>Wilke</surname>
<given-names>Claus O.</given-names>
</name>
<xref ref-type="aff" rid="aff-1"/>
<xref ref-type="aff" rid="aff-2"/>
</contrib>
<aff id="aff-1">
<institution-wrap>
<institution>Department of Interdisciplinary Life Sciences, The
University of Texas at Austin, Austin, TX, United States</institution>
</institution-wrap>
</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Department of Integrative Biology, The University of Texas
at Austin, Austin, TX, United States</institution>
</institution-wrap>
</aff>
</contrib-group>
<author-notes>
<corresp id="cor-1">* E-mail: <email></email></corresp>
</author-notes>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2025-03-21">
<day>21</day>
<month>3</month>
<year>2025</year>
</pub-date>
<volume>¿VOL?</volume>
<issue>¿ISSUE?</issue>
<fpage>¿PAGE?</fpage>
<permissions>
<copyright-statement>Authors of papers retain copyright and release the
work under a Creative Commons Attribution 4.0 International License (CC
BY 4.0)</copyright-statement>
<copyright-year>1970</copyright-year>
<copyright-holder>The article authors</copyright-holder>
<license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/4.0/">
<license-p>Authors of papers retain copyright and release the work under
a Creative Commons Attribution 4.0 International License (CC BY
4.0)</license-p>
</license>
</permissions>
<kwd-group kwd-group-type="author">
<kwd>Python</kwd>
<kwd>cheminformatics</kwd>
<kwd>bioinformatics</kwd>
<kwd>peptides</kwd>
<kwd>SMILES</kwd>
<kwd>molecular properties</kwd>
</kwd-group>
</article-meta>
</front>
<body>
<sec id="summary">
  <title>Summary</title>
  <p>Converting peptide sequences into useful representations for
  downstream analysis is a common step in computational modeling and
  cheminformatics. Furthermore, peptide drugs (e.g. Semaglutide,
  Degarelix) often take advantage of the diverse chemistries found in
  noncanonical amino acids (NCAAs), altered stereochemistry, and
  backbone modifications. Despite there being several chemoinformatics
  toolkits, none are tailored to the task of converting a modified
  peptide from an amino acid representation to the chemical string
  nomenclature Simplified Molecular-Input Line-Entry System (SMILES),
  often used in chemical modeling. Here we present p2smi, a Python
  toolkit with CLI, designed to facilitate the conversion of peptide
  sequences into chemical SMILES strings. By supporting both cyclic and
  linear peptides, including those with NCAAs, p2smi enables researchers
  to generate accurate SMILES strings for drug-like peptides, reducing
  the overhead for computational modeling and cheminformatics analyses.
  The toolkit also offers functionalities for chemical modification,
  synthesis feasibility evaluation, and calculation of molecular
  properties such as hydrophobicity, topological polar surface area,
  molecular weight, and adherence to Lipinski’s rules for
  drug-likeness.</p>
</sec>
<sec id="statement-of-need">
  <title>Statement of need</title>
  <p>Several general bioinformatics toolkits exist for chemical
  representation and cheminformatics workflows
  (<xref alt="ChemAxon, 2025" rid="ref-ChemAxon" ref-type="bibr"><italic>ChemAxon</italic>,
  2025</xref>;
  <xref alt="Landrum, 2025" rid="ref-landrum2013rdkit" ref-type="bibr">Landrum,
  2025</xref>;
  <xref alt="O’Boyle et al., 2011" rid="ref-o2011open" ref-type="bibr">O’Boyle
  et al., 2011</xref>;
  <xref alt="OpenEye, 2025" rid="ref-OEChem" ref-type="bibr">OpenEye,
  2025</xref>); however, many face limitations such as proprietary
  licensing and lack of specific functionalities for drug-like peptides.
  These constraints limit high-throughput application of sequence
  generation and conversion, especially for peptides incorporating
  noncanonical amino acids (NCAAs), diverse stereochemistry, and common
  chemical modifications. The development of p2smi was driven by the
  need to generate large-scale datasets of peptide SMILES strings for
  pretraining transformer-based models to understand SMILES notation
  (<xref alt="Feller &amp; Wilke, 2025" rid="ref-feller2025peptide" ref-type="bibr">Feller
  &amp; Wilke, 2025</xref>). Built on the core concepts from the CycloPs
  (<xref alt="Duffy et al., 2011" rid="ref-duffy2011cyclops" ref-type="bibr">Duffy
  et al., 2011</xref>) method for FASTA-to-SMILES conversion, p2smi has
  evolved into a stand-alone resource to support peptide-focused machine
  learning pipelines and peptide design workflows. We used p2smi to
  build a dataset of 10M peptides with NCAAs, backbone modifications,
  and cyclizations for pretraining a chemical language model that was
  used for predicting peptide diffusion across an artificial cell
  membrane
  (<xref alt="Feller &amp; Wilke, 2025" rid="ref-feller2025peptide" ref-type="bibr">Feller
  &amp; Wilke, 2025</xref>). We have made p2smi available as a
  pip-installable package, offering both command-line tools and Python
  functions for seamless integration into larger workflows.</p>
</sec>
<sec id="features">
  <title>Features</title>
  <p>By leveraging the database in SwissSidechain
  (<xref alt="Gfeller et al., 2012" rid="ref-gfeller2012swisssidechain" ref-type="bibr">Gfeller
  et al., 2012</xref>), p2smi accommodates over 100 unnatural amino acid
  residues. Our package supports multiple cyclization chemistries,
  including disulfide bonds, head-to-tail, and side-chain cyclizations.
  Additionally, p2smi offers a SMILES modification tool, allowing users
  to apply N-methylation and PEGylation—modifications often used to
  influence peptide-drug stability and bioactivity. An integrated
  synthetic feasibility check assists researchers in assessing the
  practical synthesis of natural peptides. Furthermore, p2smi computes
  key molecular properties such as logP, TPSA, molecular weight, and
  Lipinski’s rule compliance, supporting early-stage drug-likeness
  evaluation. Collectively, these features position p2smi as a useful
  tool for both computational peptide modeling and experimental
  design.</p>
  <p>To install p2smi, use the <monospace>pip install p2smi</monospace>
  command. Once installed, p2smi offers five primary command-line tools
  designed to facilitate various aspects of peptide analysis and
  modification:</p>
  <list list-type="bullet">
    <list-item>
      <p>generate-peptides: This tool enables the generation of random
      peptide sequences based on user-defined constraints and
      modifications, allowing for the creation of diverse peptide
      libraries for computational studies.</p>
    </list-item>
    <list-item>
      <p>fasta2smi: Converts peptide sequences from FASTA format into
      SMILES notation, facilitating integration with cheminformatics
      workflows that utilize SMILES strings for molecular
      representation.</p>
    </list-item>
    <list-item>
      <p>modify-smiles: Applies specific chemical modifications, such as
      N-methylation and PEGylation, to existing SMILES strings, enabling
      the exploration of modified peptides’ properties and
      behaviors.</p>
    </list-item>
    <list-item>
      <p>smiles-props: Computes molecular properties—including logP,
      topological polar surface area (TPSA), molecular formula, and
      evaluates compliance with Lipinski’s rules—from provided SMILES
      strings, assisting in the assessment of peptides’ drug-like
      characteristics.</p>
    </list-item>
    <list-item>
      <p>synthesis-check: Evaluates the synthetic feasibility of
      peptides based on defined synthesis rules, aiding researchers in
      determining the practicality of synthesizing specific peptide
      sequences.</p>
    </list-item>
  </list>
  <p>For detailed usage instructions and options for each command, users
  can append the –help flag to any command (e.g., generate-peptides
  –help). This will provide guidance on the command’s functionality and
  available parameters.</p>
</sec>
<sec id="state-of-the-field">
  <title>State of the field</title>
  <p>In the realm of peptide informatics, several tools have been
  recently developed to facilitate the analysis and representation of
  peptides, particularly those incorporating NCAAs and complex
  modifications. Notably, pyPept
  (<xref alt="Ochoa et al., 2023" rid="ref-ochoa2023pypept" ref-type="bibr">Ochoa
  et al., 2023</xref>) and PepFuNN
  (<xref alt="Ochoa &amp; Deibler, 2025" rid="ref-ochoa2025pepfunn" ref-type="bibr">Ochoa
  &amp; Deibler, 2025</xref>) have emerged as significant contributions
  in this area.</p>
  <p>pyPept is a Python library that generates 2D and 3D representations
  of peptides. It converts sequences from formats like FASTA, HELM, or
  BILN into molecular graphs, enabling visualization and physicochemical
  property calculations. Notably, pyPept allows customization of monomer
  libraries to accommodate a wide range of peptide modifications. It
  also offers modules for rapid peptide conformer generation,
  incorporating user-defined or predicted secondary structure
  restraints, which is valuable for structural analyses.</p>
  <p>PepFuNN is an open-source Python package designed to explore the
  chemical space of peptide libraries and conduct structure–activity
  relationship analyses. It includes modules for calculating
  physicochemical properties, assessing similarity using various peptide
  representations, clustering peptides based on molecular fingerprints
  or descriptors, and designing peptide libraries tailored to specific
  requirements. Additionally, PepFuNN provides tools for extracting
  matched pairs from experimental data, aiding in the identification of
  key mutations for subsequent design iterations.</p>
  <p>While both tools offer valuable capabilities, they are not
  specifically designed for the direct conversion of peptide sequences
  into SMILES strings—a functionality central to the initial use-case
  for p2smi of generating a large-scale database. Rather, pyPept and
  PepFuNN focus on structural representation, analysis, and
  structure–activity relationship studies of peptides, complementing the
  sequence-to-SMILES conversion capabilities provided by p2smi.</p>
</sec>
<sec id="acknowledgements">
  <title>Acknowledgements</title>
  <p>This work was supported by NIH grant 1R01 AI148419. C.O.W. was also
  supported by the Blumberg Centennial Professorship in Molecular
  Evolution at The University of Texas at Austin.</p>
</sec>
</body>
<back>
<ref-list>
  <title></title>
  <ref id="ref-feller2025peptide">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Feller</surname><given-names>Aaron L</given-names></name>
        <name><surname>Wilke</surname><given-names>Claus O</given-names></name>
      </person-group>
      <article-title>Peptide-aware chemical language model successfully predicts membrane diffusion of cyclic peptides</article-title>
      <source>Journal of Chemical Information and Modeling</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>65</volume>
      <issue>2</issue>
      <fpage>571</fpage>
      <lpage>579</lpage>
    </element-citation>
  </ref>
  <ref id="ref-duffy2011cyclops">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Duffy</surname><given-names>Fergal J</given-names></name>
        <name><surname>Verniere</surname><given-names>Mélanie</given-names></name>
        <name><surname>Devocelle</surname><given-names>Marc</given-names></name>
        <name><surname>Bernard</surname><given-names>Elise</given-names></name>
        <name><surname>Shields</surname><given-names>Denis C</given-names></name>
        <name><surname>Chubb</surname><given-names>Anthony J</given-names></name>
      </person-group>
      <article-title>CycloPs: Generating virtual libraries of cyclized and constrained peptides including nonnatural amino acids</article-title>
      <source>Journal of chemical information and modeling</source>
      <publisher-name>ACS Publications</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>51</volume>
      <issue>4</issue>
      <fpage>829</fpage>
      <lpage>836</lpage>
    </element-citation>
  </ref>
  <ref id="ref-gfeller2012swisssidechain">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Gfeller</surname><given-names>David</given-names></name>
        <name><surname>Michielin</surname><given-names>Olivier</given-names></name>
        <name><surname>Zoete</surname><given-names>Vincent</given-names></name>
      </person-group>
      <article-title>SwissSidechain: A molecular and structural database of non-natural sidechains</article-title>
      <source>Nucleic acids research</source>
      <publisher-name>Oxford University Press</publisher-name>
      <year iso-8601-date="2012">2012</year>
      <volume>41</volume>
      <issue>D1</issue>
      <fpage>D327</fpage>
      <lpage>D332</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ChemAxon">
    <element-citation>
      <article-title>ChemAxon</article-title>
      <publisher-name>https://www.chemaxon.com</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-o2011open">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>O’Boyle</surname><given-names>Noel M</given-names></name>
        <name><surname>Banck</surname><given-names>Michael</given-names></name>
        <name><surname>James</surname><given-names>Craig A</given-names></name>
        <name><surname>Morley</surname><given-names>Chris</given-names></name>
        <name><surname>Vandermeersch</surname><given-names>Tim</given-names></name>
        <name><surname>Hutchison</surname><given-names>Geoffrey R</given-names></name>
      </person-group>
      <article-title>Open babel: An open chemical toolbox</article-title>
      <source>Journal of cheminformatics</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2011">2011</year>
      <volume>3</volume>
      <fpage>1</fpage>
      <lpage>14</lpage>
    </element-citation>
  </ref>
  <ref id="ref-landrum2013rdkit">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Landrum</surname><given-names>Greg</given-names></name>
      </person-group>
      <article-title>RDKit: A software suite for cheminformatics, computational chemistry, and predictive modeling</article-title>
      <publisher-name>https://www.rdkit.org</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-OEChem">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>OpenEye</surname><given-names>Cadence Molecular Sciences</given-names></name>
      </person-group>
      <article-title>OEChem</article-title>
      <publisher-name>https://www.eyesopen.com</publisher-name>
      <year iso-8601-date="2025">2025</year>
    </element-citation>
  </ref>
  <ref id="ref-ochoa2023pypept">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ochoa</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Brown</surname><given-names>JB</given-names></name>
        <name><surname>Fox</surname><given-names>Thomas</given-names></name>
      </person-group>
      <article-title>pyPept: A python library to generate atomistic 2D and 3D representations of peptides</article-title>
      <source>Journal of Cheminformatics</source>
      <publisher-name>Springer</publisher-name>
      <year iso-8601-date="2023">2023</year>
      <volume>15</volume>
      <issue>1</issue>
      <fpage>79</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-ochoa2025pepfunn">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ochoa</surname><given-names>Rodrigo</given-names></name>
        <name><surname>Deibler</surname><given-names>Kristine</given-names></name>
      </person-group>
      <article-title>PepFuNN: Novo nordisk open-source toolkit to enable peptide in silico analysis</article-title>
      <source>Journal of Peptide Science</source>
      <publisher-name>Wiley Online Library</publisher-name>
      <year iso-8601-date="2025">2025</year>
      <volume>31</volume>
      <issue>2</issue>
      <fpage>e3666</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
